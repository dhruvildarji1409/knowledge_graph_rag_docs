[
    {
        "id": "1.1",
        "title": "Linux",
        "content": "\n",
        "parent_id": null,
        "level": 1
    },
    {
        "id": "1.1.1",
        "title": "Container Spinoff",
        "content": "\n\n",
        "parent_id": "1.1",
        "level": 2
    },
    {
        "id": "1.1.1.1",
        "title": "PDK = 6080",
        "content": "    dazel run --config=drive-linux_6.0.8.0 //partners/daimler/av/packaging/containers/avos:avos-linux-daimler\n",
        "parent_id": "1.1.1",
        "level": 3
    },
    {
        "id": "1.1.1.2",
        "title": "PDK = 6510",
        "content": "    dazel run --config=drive-linux_6.5.1 //partners/daimler/av/packaging/containers/avos:avos-linux-daimler\n\n",
        "parent_id": "1.1.1",
        "level": 3
    },
    {
        "id": "1.1.2",
        "title": "Launch the container",
        "content": "\n    docker run -it --privileged --net=host -v /dev/bus/usb:/dev/bus/usb -v /home/kballa/tmp:/mnt/ddu-export-dir  ${AVOS_URL}\n\n",
        "parent_id": "1.1",
        "level": 2
    },
    {
        "id": "1.1.3",
        "title": "Create DDU images",
        "content": "\n    board_type=<board_type> #p3710-10-a01, p3710-12-a03, p3710-12-a04, p3663-a01 or p4024-a00, p3710-10-s05, p3710-12-s05\n    /rfs/ota-files/create_ddu_ota_pkg.sh -d ES -b p3710-10-s05 -o linux -p my-ddu-ota-pkg\n\n\n",
        "parent_id": "1.1",
        "level": 2
    },
    {
        "id": "1.2",
        "title": "QNX",
        "content": "\n",
        "parent_id": null,
        "level": 1
    },
    {
        "id": "1.2.1",
        "title": "Container Spinoff",
        "content": "\nexport NDAS_PARTNER=daimler\n",
        "parent_id": "1.2",
        "level": 2
    },
    {
        "id": "1.2.1.1",
        "title": "PDK = 6080",
        "content": "    dazel run --config=drive-qnx_6.0.8.0 //partners/daimler/av/packaging/containers/avos:avos-qnx-daimler\n",
        "parent_id": "1.2.1",
        "level": 3
    },
    {
        "id": "1.2.1.2",
        "title": "PDK = 609",
        "content": "    dazel run --config=drive-qnx_6.0.9 //partners/daimler/av/packaging/containers/avos:avos-qnx-daimler\n",
        "parent_id": "1.2.1",
        "level": 3
    },
    {
        "id": "1.2.1.3",
        "title": "PDK = 652",
        "content": "    dazel run --config=drive-qnx_6.5.2 //partners/daimler/av/packaging/containers/avos:avos-qnx-daimler\n\n",
        "parent_id": "1.2.1",
        "level": 3
    },
    {
        "id": "1.2.2",
        "title": "Launch the container",
        "content": "\n",
        "parent_id": "1.2",
        "level": 2
    },
    {
        "id": "1.2.2.1",
        "title": "PDK = 6080",
        "content": "    docker run --rm -dt --privileged --net host -v /lib/modules/5.4.0-96-generic:/lib/modules/5.4.0-96-generic -v /dev/bus/usb:/dev/bus/usb -v /home/kballa/.qnx/license:/root/.qnx/license -v /home/kballa/qnx710-ga1-6.0.8.0:/sdp -e QNX_BASE=/sdp -e QNX_TARGET=/sdp/target/qnx7 -e QNX_HOST=/sdp/host/linux/x86_64 -e PATH=/sdp/host/linux/x86_64/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin -v /home/kballa/tmp/:/kballa --workdir /rfs <ID>\n",
        "parent_id": "1.2.2",
        "level": 3
    },
    {
        "id": "1.2.2.2",
        "title": "PDK = 609",
        "content": "    docker run --rm -dt --privileged --net host -v /lib/modules/5.4.0-96-generic:/lib/modules/5.4.0-96-generic -v /dev/bus/usb:/dev/bus/usb -v /home/kballa/.qnx/license:/root/.qnx/license -v /home/kballa/qnx710-ga1-6.0.9.2-0418:/sdp -e QNX_BASE=/sdp -e QNX_TARGET=/sdp/target/qnx7 -e QNX_HOST=/sdp/host/linux/x86_64 -e PATH=/sdp/host/linux/x86_64/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin -v /home/kballa/tmp/:/kballa --workdir /rfs <ID>\n",
        "parent_id": "1.2.2",
        "level": 3
    },
    {
        "id": "1.2.2.3",
        "title": "PDK = 6520",
        "content": "    docker run --rm -dt --name 1216-qnx-std-6520-rc3 --privileged --net host -v /lib/modules/5.4.0-96-generic:/lib/modules/5.4.0-96-generic -v /dev/bus/usb:/dev/bus/usb -v /home/kballa/.qnx/license:/root/.qnx/license -v /home/kballa/qnx710-ga1-6.5.2-1213:/sdp -e QNX_BASE=/sdp -e QNX_TARGET=/sdp/target/qnx7 -e QNX_HOST=/sdp/host/linux/x86_64 -e PATH=/sdp/host/linux/x86_64/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin -v /home/kballa/tmp/:/kballa --workdir /rfs <ID>\n",
        "parent_id": "1.2.2",
        "level": 3
    },
    {
        "id": "1.2.2.4",
        "title": "PDK = 6510 rr replay test",
        "content": "    docker run -dt --name 6510-rc5-DOS-qnx-std-rr-replaytest-1107-kedar  --privileged --net=host -v /dev/bus/usb:/dev/bus/usb -v /drive_flashing/:/drive_flashing  -v /home/kballa/.qnx/license:/root/.qnx/license  -v /home/kballa/qnx710-ga1-6.5.1.0:/sdp urm.nvidia.com/sw-driveos-qnx-docker-local/release/drive-agx-orin-qnx-aarch64-pdk-build-x86-internal/embedded-6.5.1.0:6.5.1.0-0005\n\n",
        "parent_id": "1.2.2",
        "level": 3
    },
    {
        "id": "1.2.3",
        "title": "Create DDU images",
        "content": "\n    python3 /rfs/drive-qnx/filesystem/av_copytarget_tool.py\n    export PDK_TOP=/rfs\n    export QNX_BASE=/sdp\n    export QNX_TARGET=$QNX_BASE/target/qnx7/\n    export QNX_HOST=$QNX_BASE/host/linux/x86_64/\n    export QNX_TOP=$PDK_TOP/drive-qnx/\n    export PATH=$PATH:$QNX_HOST/usr/bin\n    export MKIFS_CUSTOM_PATH=$QNX_BASE/custom/nvidia_ptpd/target/qnx7/aarch64le/sbin\n    export MKIFS_CUSTOM_PATH=$MKIFS_CUSTOM_PATH:$QNX_BASE/custom/nvidia/libslog2parse/target/qnx7/aarch64le/lib\n    export CPUVARDIR=aarch64le\n    export NV_WORKSPACE=/rfs\n    //6080\n    bash ${QNX_TOP}/bsp/images/generate_IFS_image.sh ${QNX_TOP}/bsp/images/orin_gos_vm.build ${QNX_TOP}/bsp/images/ifs-nvidia-t18x-vcm31t186-orin_gos_vm.bin\n    //6092\n    /rfs/drive-qnx/filesystem/qnx_create_ifs.sh -i /rfs/drive-qnx/filesystem/build-fs/configs/orin_gos_vm.CONFIG.json\n    /rfs/ota-files/create_ddu_ota_pkg.sh -d ES -b p3710-10-s05 -o qnx -p ddu-ota -n\n\n",
        "parent_id": "1.2",
        "level": 2
    },
    {
        "id": "1.3",
        "title": "QNX-Safety",
        "content": "\n",
        "parent_id": null,
        "level": 1
    },
    {
        "id": "1.3.1",
        "title": "Container spinoff",
        "content": "    export NDAS_PARTNER=daimler\n",
        "parent_id": "1.3",
        "level": 2
    },
    {
        "id": "1.3.1.1",
        "title": "PDK = 6080",
        "content": "    dazel run --config=drive-qnx-6.0.8.0_tegra_int-docker_git-av_avos-sae2-safety_rel  --config=remote_exec //partners/daimler:avos_images_group_build\n",
        "parent_id": "1.3.1",
        "level": 3
    },
    {
        "id": "1.3.1.2",
        "title": "PDK = 609x",
        "content": "    dazel run --config=drive-qnx-6.0.9_tegra_int-docker_git-av_avos-sae2-safety_rel  --config=remote_exec //partners/daimler:avos_images_group_build\n\n",
        "parent_id": "1.3.1",
        "level": 3
    },
    {
        "id": "1.3.2",
        "title": "Launch the container",
        "content": "\n",
        "parent_id": "1.3",
        "level": 2
    },
    {
        "id": "1.3.2.1",
        "title": "PDK = 6080",
        "content": "    docker run --rm -dt --privileged --net=host -v /dev/bus/usb:/dev/bus/usb -v /home/kballa/qnx710-ga1-6.0.8.0-0222:/sdp -v /home/kballa/.qnx:/root/.qnx -v /home/kballa/ndas:/mnt/ddu-export-dir -e QNX_BASE=/sdp -e QNX_TARGET=/sdp/target/qnx7 -e QNX_HOST=/sdp/host/linux/x86_64 -e PATH=/sdp/host/linux/x86_64/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin <docker image>\n",
        "parent_id": "1.3.2",
        "level": 3
    },
    {
        "id": "1.3.2.2",
        "title": "PDK = 6090(6.0-safety-av)",
        "content": "    docker run --rm -dt --name name --privileged --net=host -v /dev/bus/usb:/dev/bus/usb -v /home/kballa/qnx710-ga1-6.0.9:/sdp -v /home/kballa/.qnx:/root/.qnx -v /home/kballa/ndas:/mnt/ddu-export-dir -e QNX_BASE=/sdp -e QNX_TARGET=/sdp/target/qnx7 -e QNX_HOST=/sdp/host/linux/x86_64 -e PATH=/sdp/host/linux/x86_64/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin <docker_image>\n",
        "parent_id": "1.3.2",
        "level": 3
    },
    {
        "id": "1.3.2.3",
        "title": "PDK = 6094 (embedded-6.0-safety)",
        "content": "    docker run --rm -dt --name name --privileged --net=host -v /dev/bus/usb:/dev/bus/usb -v /home/kballa/qnx710-ga1-6.0.9.4:/sdp -v /home/kballa/.qnx:/root/.qnx -v /home/kballa/ndas:/mnt/ddu-export-dir -e QNX_BASE=/sdp -e QNX_TARGET=/sdp/target/qnx7 -e QNX_HOST=/sdp/host/linux/x86_64 -e PATH=/sdp/host/linux/x86_64/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin <docker_image>\n",
        "parent_id": "1.3.2",
        "level": 3
    },
    {
        "id": "1.3.2.3",
        "title": "PDK = 652",
        "content": "     docker run --rm -dt --name <name> --privileged --net=host -v /dev/bus/usb:/dev/bus/usb -v /home/kballa/qnx710-ga1-6.5.2-1213:/sdp -v /home/kballa/.qnx:/root/.qnx -v /home/kballa/ndas:/mnt/ddu-export-dir -e QNX_BASE=/sdp -e QNX_TARGET=/sdp/target/qnx7 -e QNX_HOST=/sdp/host/linux/x86_64 -e PATH=/sdp/host/linux/x86_64/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin <docker_image>\n\n",
        "parent_id": "1.3.2",
        "level": 3
    },
    {
        "id": "1.3.3",
        "title": "Create DDU images",
        "content": "\n# image generation script\n./av/hyperion/8.1/gen_nv_ref_ddu/gen_nv_ref_ddu_avos_flow.sh -s prod_debug_extra -b p3710-12-a04 -i avos --pdk 6.0.9  // -i full for avos image full will generate the full ndas ddu\n./mnt/ddu-export-dir/av/hyperion/8.1/tools/image_prep/image_prep.py img --board p3710-10-s05 --enable-nvdec --out-dir /mnt/ddu-export-dir --safety-image-variant prod_debug_extra --power-profile MAXP-A-990-D-12 --image-type avos //enable nvdec\n\n/rfs/ndas_support_tools/image_prep.py img --board  p3710-10-s05  --out-dir /mnt/ddu-export-dir --safety-image-variant prod_debug_extra --image-type avos\n\n\n2. Flashing the DDU image\n\n    Creating workspace\n    mkdir /tmp/flashing.\n    cd /tmp/flashing\n\n    Download *.tgz and *.yml file to flashing folder\n\n    Start flashing container with be;pw command\n        docker run -it --name flashing_container -dt --privileged --net host -v /dev/bus/usb:/dev/bus/usb -v /run/udev:/run/udev --mount type=bind,source=/etc/device_config/device_config.yaml,target=/rfs/cache/device_config.yaml -v $PWD/log:/rfs/cache/log -v $PWD:/rfs/cache/img -v $PWD/cache:/cache/cache --rm nvcr.io/nv-drive-internal/drivesw-dev/flashing_container:4.3.4.0\n    set param BUNDLE_NAME\n    BUNDLE_NAME=\"/rfs/cache/img/hyp81_avos_1D_target-qnx-safety_prod-debug-extra_v25_ES_3710_F0_TS4_SKU12_0_20241119141555_94a22949.yml\"\n    start flashing\n    docker exec -it flashing_container python3 av/update/flashing_container/cli/fc-cli --bundle-url $BUNDLE_NAME --local_path /rfs/cache/img --token \"NA\"\n    Verify flashing is success by scrolling the logs up\n\n        FC Version: 4.3.3.0\n        Build Date: 2024-07-05 08:54:02 UTC\n        Git Branch: sandbox/flashing_container-4.3.3.0-fix\n        Commit SHA: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        ============================================================\n        Analyzer Config Version: 20240623 [Builtin]\n        ============================================================\n        Status: SW Update Success!\n\n    Once the flashing is completed stop the flashing_container (This step is must else you cannot access tegra (UART will be locked by flashing_container)\n        docker stop flashing_container\n\n\n3.  Generating DDU image(GVS) on Host machine\n\ncd ndas\nsource ./scripts/envsetup.sh\nbuildauth login\nexport NV_PRIVATE_CI_JOBS_BUILD_DIR=./private/ci/jobs/build\nexport NV_PRIVATE_CI_JOBS_DIR=./private/ci/jobs\nexport AV_OTA_PACKAGE=false\nexport AV_DDU_UPLOAD=true\nexport DDU_FORCE_UPLOAD=false\nexport TOP=$(dirname $PWD)\nexport SERVICE_WRK_DIR=/home/$USER/artifacts\nexport DDU_TARGET=\"avos-3710TS5_SKU12-ES-F0\"\nexport BUILD_OS=qnx\nexport BUILD_PDK_VER=6.0.9\n\n//example1: int-dduimg\nexport NV_COMPONENT=\"ndas-main drive-${BUILD_OS}-${BUILD_PDK_VER} tegra int-dduimg git-av avos-partner-mb-safety rel\"\nexport BUILD_BRAIN_COMPONENT=\"ndas-main_drive-${BUILD_OS}-${BUILD_PDK_VER}_tegra_int-dduimg_git-av_avos-partner-mb-safety_rel\"\n./ci/jobs/build/run.sh\n\n//example2: int-pkg builds\nexport NV_COMPONENT=\"av-dev-l2pp-2 drive-${BUILD_OS}-${BUILD_PDK_VER} tegra int-pkg git-av av-sae2-safety rel\" //safety\nexport NV_COMPONENT=\"av-dev-l2pp-2 drive-${BUILD_OS}-${BUILD_PDK_VER} tegra int-pkg git-av av-partner-mb rel\". //std\nexport BUILD_BRAIN_COMPONENT=\"av-dev-l2pp-2_drive-qnx-6.0.9_tegra_int-pkg_git-av_av-sae2-safety_rel\"\nexport BUILD_BRAIN_COMPONENT=\"av-dev-l2pp-2_drive-qnx-6.5.2_tegra_int-pkg_git-av_av-sae2-safety_rel\". //safety\nexport BUILD_BRAIN_COMPONENT=\"av-dev-l2pp-2_drive-qnx-6.5.2_tegra_int-pkg_git-av_av-partner-mb_rel\". //std\n\n//example3 6080\nexport NV_COMPONENT=\"av-dev-l2pp-2 drive-${BUILD_OS}-${BUILD_PDK_VER} tegra int-pkg git-av av-partner-mb rel\"\nexport BUILD_BRAIN_COMPONENT=\"av-dev-l2pp-2_drive-qnx-6.0.8.0_tegra_int-pkg_git-av_av-partner-mb_rel\"\n\n ./ci/jobs/build/run.sh\n",
        "parent_id": "1.3",
        "level": 2
    }
]